

use pre-compile instructions to chose device




,change file name likes to "fst,*.bases.leaves.shadows.fst"




add prepare and begin in ".../prepare.*"




change the order of pre-compile instructions


change the order of file-system name at pre-compile instructions




add note at start of paragraphs


paragragh note like ",variable-creatings ,extension-variable-creatings ,memory-creating"


different functions use one same code part




send formal parameter directly as a pointer, maybe saved at current lake




change pre-compile instruction defining name like "added___fst_selfcheck__lakes__judge_lights"

change variable names likes "note_silts__switches__returns_lights"


change public variable names like "that_silts__sizes___fst_roots__threads__prepare"


change type names to "that_forms__waters___fst_roots__threads__prepare"


change function names to "that_doors__out__stones___fst_roots__parks_terminals__out_stones"




change variable names to "..._object_..." and "..._subject_..."




variable creating order,
first processes control switch variables,
second circular control switch variables,
third temporary lake variables,
forth extension lake variables,
fifth time calculation variables,
sixth lake calculation variables,
seventh extension variables




processes order,
first formal parameters blank return,
second variable creatings,
third processes and results control switch variable values,
forth code parts,
fifth result lake prepare fishing, and result value fishing,
sixth processes and results control switch variable cleanning,
seventh variables cleanning




use binary switches




change lines rule of variable creatings and droppings




note_waters_*_temporary before extension variables


add buffer variable to get results




decide if we should make a part for a code block, if yes, we shoulds use switches divide it




add switches for circulars and returns

create processes control variable switches first




add return choice and return lights switches

add blank return results judgement and value




add full conditions in condition selection code blocks

add full condition code blocks




use new circular judgement function, counter plus at start, judgement at end

add return switch judgement at the start values, before the circular start

add return switch judgement at the end of cyclics

add judgement of continue switch at every code block in a circular


add judgement of circular switch at every code block in the current circular

add judgement of return switch at every code block




add selfcheck report at every code block

selfcheck report to the lake name likes "fst,branches,flowers,seed,,fst,selfcheck,steps"




change the extension type transforms to notes




change lines rule in formal parameters

change orders of variables creating

use more specifi variable names


add time calculation variables




