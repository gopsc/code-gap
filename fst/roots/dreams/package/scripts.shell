

if  [  !  $that_circuits_crystals___fst_roots__dreams_package___scripts  ]; then

that_circuits_crystals___fst_roots__dreams_package___scripts='yes'




if  [  !  $that_circuits___test  ]; then

if  [  !  $that_circuits_test___fst_roots__dreams_package___scripts  ]; then


$that_circuits___island='yes'


fi

fi




if  [  !  $that_circuits___island  ]; then

if  [  !  $that_circuits_starfall___shell_unix  ]; then




function that_ways___fst_roots__dreams_package___scripts

{







:<<EOF

cat './fst/roots/mountains/prepare/star-fall/poems-third-common.poems-third             >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-third-origin.poems-third'            >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-third-unix.poems-third'              >>  './?.fst'

#cat './fst/roots/mountains/prepare/star-fall/poems-third-windows.poems-third'           >>  './?.fst'


cat './fst/roots/mountains/prepare/star-fall/poems-annotation-common.poems-annotation'  >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-annotation-origin.poems-annotation'  >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-annotation-windows.poems-annotation'  >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-annotation-arduino.arduino'          >>  './?.fst'


cat './fst/roots/mountains/prepare/star-fall/shell-unix.shell'                          >>  './?.fst'

cat './fst/roots/mountains/prepare/starfall/shell-bash.shell'                          >>  './?.fst'

cat './fst/roots/mountains/prepare/starfall/shell-ash.shell'                           >>  './?.fst'

EOF


cat './fst/roots/prepare/circuits/scripts'                                  >>  './?.fst'


:<<EOF


#cat './fst/roots/mountains/prepare/circuits/arduino-nano.arduino'                     >>  './island.c'

#cat './fst/roots/mountains/prepare/circuits/arduino-micro.arduino'                    >>  './island.c'

cat './fst/roots/mountains/prepare/circuits/renesas-gadget-citrus.arduino'            >>  './island.c'


cat './fst/roots/mountains/prepare/circuits/science-technology-consulting-8g1k08a.c'  >>  './island.c'

cat './fst/roots/mountains/prepare/circuits/science-technology-consulting-15f104w.c'  >>  './island.c'


cat './fst/roots/mountains/prepare/circuits/sgs-thomson-32l011k4t6-nucleo.c'          >>  './island.c'


cat './fst/roots/mountains/prepare/circuits/linux-intel'                              >>  './island.c'

cat './fst/roots/mountains/prepare/circuits/linux-raspberrypi'                        >>  './island.c'


cat './fst/roots/mountains/prepare/circuits/windows.poems-third'                      >>  './?.fst'

cat './fst/roots/mountains/prepare/circuits/windows.visual-basic'                     >>  './?.visual-basic'

cat './fst/roots/mountains/prepare/circuits/windows-cygwin.poems-third'               >>  './?.fst'


cat './fst/roots/mountains/prepare/circuits/android.java'                             >>  './?.java'

cat './fst/roots/mountains/prepare/circuits/android-termux.poems-third'               >>  './?.fst'




cat './fst/roots/mountains/soft-serial/prepare.arduno'              >>  './island.c'


cat './fst/roots/mountains/muti-serial/prepare.arduino'             >>  './island.c'

cat './fst/roots/mountains/muti-serial/winbond-w25q/erase.arduino'  >>  './island.c'

cat './fst/roots/mountains/muti-serial/winbond-w25q/read.arduino'   >>  './island.c'

cat './fst/roots/mountains/muti-serial/winbond-w25q/write.arduino'  >>  './island.c'




cat './fst/roots/threads/prepare'                                   >>  './island.c'

cat './fst/roots/threads/begin'                                     >>  './island.c'

cat './fst/roots/threads/end'                                       >>  './island.c'
EOF

circuits_crystals___forgiven=`cat  './fst/roots/lakes/prepare'             |  tee -a  './?.fst'`
:<<EOF
#include "./roots/lakes/prepare.bases"

#include "./roots/lakes/waves/create.bases" // may stuck when it fail

#include "./roots/lakes/waves/free.bases" // may run out when it fail

#include "./roots/lakes/waves/resize.bases" // may stuck when it fail


#include "./roots/lakes/forms/waters/prepare.bases"


#include "./roots/lakes/forms/silts/prepare.bases"


#include "./roots/lakes/forms/stones/prepare.bases"

EOF

circuits_crystals___forgiven=`cat  './fst/roots/lakes/forms/stones/convert.shell'                                       |  tee -a   './?.sh'`
:<<EOF

#include "./roots/lakes/waters/show.bases" // use __int8_t,  only decimal system,   maybe less than zero

#include "./roots/lakes/waters/clean.bases" // use __int8_t


#include "./roots/lakes/stones/copy.bases"

#include "./roots/lakes/stones/append.bases"

#include "./roots/lakes/stones/measure.bases"

#include "./roots/lakes/stones/compare.bases"

#include "./roots/lakes/stones/find.bases"


#include "./roots/trees/remove.computers"


#include "./roots/trees/dirents/is.linuxes" // note_structure

#include "./roots/trees/dirents/create.linuxes"


#include "./roots/trees/files/is.linuxes" // note_structure

#include "./roots/trees/files/write.computers" // note_files

EOF

circuits_crystals___forgiven=`cat  './fst/roots/trees/files/snakes.shell'  |  tee -a  './?.sh'`

:<<EOF

#include "./roots/trees/files/read.computers" // note_files; may read even wrong


#include "./roots/parks/terminals/out-silts.bases"

#include "./roots/parks/terminals/out-stones.bases"


EOF


circuits_crystals___forgiven=`cat './fst/roots/dreams/prepare/begin.shell'       |  tee -a  './?.sh'`

circuits_crystals___forgiven=`cat './fst/roots/dreams/prepare/package.shell'     |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/package/begin.shell'       |  tee -a  './?.sh'`

circuits_crystals___forgiven=`cat './fst/roots/dreams/package/annotetion.shell'  |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/convert/begin.shell'       |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/compile/begin.shell'       |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/test/begin.shell'          |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/clean/begin.shell'         |  tee -a  './?.sh'`


:<<EOF


#include "./branches/threads/prepare.bases"

#include "./branches/threads/begin.bases"

#include "./branches/threads/end.bases"


#include "./branches/lakes/prepare.bases"

#include "./branches/lakes/begin.bases"

#include "./branches/lakes/end.bases"


#include "./branches/lakes/waves/add.bases"  // support types include waters, silts and stones

#include "./branches/lakes/waves/drop.bases"

#include "./branches/lakes/waves/fish.bases"

#include "./branches/lakes/waves/graze.bases"


#include "./branches/lakes/forms/stones/copy.bases"

#include "./branches/lakes/forms/stones/append.bases"

#include "./branches/lakes/forms/stones/compare.bases"


#include "./branches/lakes/bubbles/prepare.bases"

#include "./branches/lakes/bubbles/clean.bases"


#include "./branches/lakes/bubbles/lights/prepare.bases"

#include "./branches/lakes/bubbles/lights/clean.bases"


#include "./branches/lakes/bubbles/threads/prepare.bases"

#include "./branches/lakes/bubbles/threads/clean.bases"


#include "./branches/lakes/bubbles/moons/prepare.bases"

#include "./branches/lakes/bubbles/moons/clean.bases"


#include "./branches/trees/dirents/is.linuxes"

#include "./branches/trees/dirents/create.linuxes"
//
#include "./branches/trees/dirents/remove.linuxes"


#include "./branches/trees/files/is.linuxes"

#include "./branches/trees/files/save.linuxes"

#include "./branches/trees/files/get.linuxes"

#include "./branches/trees/files/remove.linuxes"


#include "./branches/parks/tenderness/out.bases"


#include "./branches/selfcheck/lakes/show.bases"

#include "./branches/selfcheck/lakes/judge-lights.bases"


#include "./branches/dreams/prepare.bases"

#include "./branches/dreams/clean.bases"


#include "./branches/dreams/checks/prepare.bases"

#include "./branches/dreams/checks/clean.bases"

#include "./branches/dreams/checks/begin.bases"


#include "./branches/dreams/checks/forms/blank.bases"


/#include "./branches/dreams/deamons/begin.bases"


#include "./branches/dreams/tests/prepare.bases"

#include "./branches/dreams/tests/clean.bases"

#include "./branches/dreams/tests/begin.bases"


//#include "./branches/dreams/snows/prepare.bases"

//#include "./branches/dreams/snows/clean.bases"

//#include "./branches/dreams/snows/begin.bases"

//#include "./branches/dreams/snows/deamons.bases"


#include "./branches/dreams/showings/prepare.bases"

#include "./branches/dreams/showings/clean.bases"

#include "./branches/dreams/showings/begin.bases"


//#include "./branches/dreams/spiders/prepare.bases"

//#include "./branches/dreams/spiders/clean.bases"

//#include "./branches/dreams/spiders/begin.bases"

//#include "./branches/dreams/spiders/deamons.bases"


#include "./branches/dreams/fallings/begin.bases"




#include "./stars-ship.c"




#include "./branches/dreams/seeds/begin.bases"


EOF

#circuits_crystals___forgiven=`cat  './fst/branc hes/flowers/begin.poems-third`   |  tee -a  './?.poems-third' // no blank check yet

circuits_crystals___forgiven=`cat  './fst/branches/flowers/cain.shell'           |  tee -a  './?.sh'`

#circuits_crystals___forgiven=`cat  './fst/branches/flowers/scripts'              |  tee -a  './?.fst'`

#circuits_crystals___forgiven=`cat  './fst/branches/flowers/scripts.poems-third'  |  tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`cat  './fst/branches/flowers/scripts.shell'        |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat  './fst/roots/flowers/scripts'                 |  tee -a  './?.fst'`

circuits_crystals___forgiven=`cat  './fst/roots/flowers/scripts.poems-third'     |  tee -a  './?.c' './?.cpp'`

#circuits_crystals___forgiven=`cat  './fst/roots/flowers/scripts.arduino'         |  tee -a  './?.cpp'`

circuits_crystals___forgiven=`cat  './fst/roots/flowers/scripts.shell'           |  tee -a  './?.sh'`









}




fi

fi




fi

