



void setup() {}



void loop()

{

























int that_silts_lengths__waters = 255 * 50 / 42;

int that_silts_calculators__waters = 0;




int that_silts_lengths__rivers = 1000;

int that_silts_steps__rivers = 0;

int that_silts_calculators__rivers = 0;









byte pageBuffer[256];

char str[] = "hi.";









SoftwareSerial that_serial ( 11, 12 );
















pinMode ( LED_BUILTIN, OUTPUT );

digitalWrite ( LED_BUILTIN, LOW );









Serial . begin ( 9600 );

that_serial . begin ( 9600 );









SPI . begin ();

SPI . setDataMode ( SPI_MODE0 );
 
SPI . setBitOrder ( MSBFIRST );
















digitalWrite ( LED_BUILTIN, LOW );









digitalWrite ( LED_BUILTIN, HIGH );

delay ( 100 );

digitalWrite ( LED_BUILTIN, LOW );

delay ( 100 );

digitalWrite ( LED_BUILTIN, HIGH );

delay ( 100 );

digitalWrite ( LED_BUILTIN, LOW );

delay ( 100 );

digitalWrite ( LED_BUILTIN, HIGH );

delay ( 100 );

digitalWrite ( LED_BUILTIN, LOW );
















digitalWrite ( LED_BUILTIN, HIGH );

























while ( 1 )

{

























digitalWrite ( LED_BUILTIN, LOW );









if ( that_serial.available() > 0 )

{

Serial . println ( that_serial.readString() );

}









if ( Serial.available() > 0 )

{

that_serial . println ( Serial.readString() );

}









//digitalWrite ( LED_BUILTIN, HIGH );

























that_silts_calculators__waters = analogRead ( A0 );
















that_silts_calculators__waters

=

that_silts_lengths__waters

-

that_silts_calculators__waters;









that_silts_steps__rivers

=

that_silts_lengths__rivers

/

that_silts_lengths__waters;









that_silts_calculators__rivers

=

that_silts_steps__rivers

*

that_silts_calculators__waters;
















for

(

int i = 0;

i <= that_silts_lengths__rivers;

i = i + that_silts_calculators__rivers

)

{


digitalWrite ( LED_BUILTIN, HIGH );



delay ( that_silts_calculators__rivers );


digitalWrite ( LED_BUILTIN, LOW );


}























/*

erase_roots_winbond_twenty_five_q ();
















write_roots_winbond_twenty_five_q ( 0x0000, str, sizeof(str));









read_roots_winbond_twenty_five_q ( 0x0000, pageBuffer, sizeof(str));
















Serial . print ( "'" );

for (  int i = 0;  i < sizeof ( str );  i++  )
    
{

Serial . print (  char ( pageBuffer [ i ] )  );

}
    
    
Serial . print ( "'" );
    
Serial . println ();

*/























delay ( 10 );









//while ( 1 ) {}









}

























SPI . end ();









Serial . end ();

that_serial . end ();









digitalWrite ( LED_BUILTIN, LOW );

























}
