



that_circuits___island='yes'




that_circuits_mountains___android_termux='yes'


that_circuits_starfall___shell_unix='yes'






if [  $that_circuits___test  ]; then


that_circuits___star_fall=shell_unix


fi




if [  $that_circuits___island  ]; then


that_circuits___star_fall=shell_unix


fi




if [  $that_circuits___test  ]; then


that_circuits___star_fall=shell_unix


fi




if [  $that_circuits___island  ]; then


that_circuits___star_fall=shell_unix


fi




if [  !  $circuits_crystals___fst_roots__lakes_forms_stones___convert  ]; then

circuits_crystals___fst_roots__lakes_forms_stones___convert='yes'






if [  $circuits___test ]; then


if [  $circuits_test___fst_roots__lakes_forms_stones___convert  ]; then




if [  !  $circuits___island  ]; then


circuits___island='yes'


fi




if [  !  $circuits_starfall___shell_unix  ]; then


circuits_starfall___shell_unix='yes'


fi




fi


fi




if [  $circuits___island  ]; then

if [  $circuits_starfall___shell_unix  ]; then




function ways___fst_roots__lakes_forms_stones___convert {


:<<EOF

echo 'convert'

EOF


}




fi


fi


if [  $circuits___test  ]; then


if [  $circuits_test___fst_roots__lakes_forms_stones___convert  ]; then




unset $circuits___island




fi


fi




fi




if [  !  $that_circuits_crystals___fst_roots__trees_files___snakes  ]; then

that_circuits_crystals__fst_roots__trees_files___snakes='yes'






if [  $that_circuits___test  ]; then


if [  $that_circuits_test___fst_roots__trees_files___snakes  ]; then






if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




if [  !  $that_circuits_starfall___shell_unix  ]; then


that_circuits_starfall___shell_unix='yes'


fi






fi


fi






if [  $that_circuits___island  ]; then


if [  $that_circuits_starfall___shell_unix  ]; then




function that_ways___fst_roots__trees_files___snakes ()

{




that_silts_lengths___snakes=''

that_silts_lengths___snakes=$#


that_stones_names___snakes=''

that_stones_names___snakes=$@


that_stones_results___snakes=''

that_stones_results___snakes=''









if [  $that_silts_lengths___snakes  -eq  1  ]; then




that_stones_results___snakes=`hexdump $that_stones_names___snakes`




fi









that_silts_lengths___snakes=''


unset  that_silts_lengths___snakes




that_stones_names___snakes=''


unset  that_stones_names___snakes






#echo $that_stones_results___snakes  >  ./big-seas/test.sh




#that_ways___fst_roots__trees_files___snakes=

echo "$that_stones_results___snakes"


}




fi




fi




if [  $that_circuits___test  ]; then


if [  $that_circuits_test___fst_roots__trees___snakes  ]; then




unset $that_circuits___island




fi


fi



fi




if [  !  $that_circuits_crystals___fst_roots__dreams_prepare___scripts  ]; then

that_circuits_crystals___fst_roots__dreams_prepare___scripts='yes'




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_prepare___scripts  ]; then




if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




fi

fi




if [  $that_circuits___island  ]; then

if [  $that_circuits_starfall___shell_unix  ]; then




function that_ways___fst_roots__dreams_prepare___scripts

{









that_circuits_crystals___forgiven=''




if  [  -f  './?.sh'  ]; then

circuits_crystals___forgiven=`rm './?.sh'`

fi




circuits_crystals___forgiven=`touch   './?.fst'`


circuits_crystals___forgiven=`touch   './?.c'`

circuits_crystals___forgiven=`touch   './?.cpp'`


circuits_crystals___forgiven=`touch   './?.sh'`

circuits_crystals___forgiven=`touch   './?.java'`


circuits_crystals___forgiven=`touch   './?.vb'`

circuits_crystals___forgiven=`touch   './?.py'`






circuits_crystals___forgiven=   \
                                \
`                               \
                                \
seq           2  |              \
xargs -i echo '' |              \
tee   -a                        \
                                \
'./?.fst'                       \
'./?.c'                         \
'./?.cpp'                       \
'./?.sh'                        \
'./?.java'                      \
'./?.vb'                        \
'./?.py'                        \
                                \
`









}




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_prepare___scripts  ]; then




if [  $that_circuits___island  ]; then


unset $that_circuits___island


fi




fi

fi




fi




if [  !  $that_circuits_crystals___fst_roots__dreams_prepare___package  ]; then

that_circuits_crystals___fst_roots__dreams_prepare___package='yes'




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_prepare___package  ]; then




if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




fi

fi




if [  $that_circuits___island  ]; then

if [  $that_circuits_starfall___fst_roots__dreams_prepare___package  ]; then




function that_ways___fst_roots__dreams_prepare___package

{









if  [  $#  -eq  3  ]

then


if  [  $1  =  'test'  ]

then




circuits_crystals___forgiven=`echo  ', circuits,'             |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ','                       |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  $1                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`


circuits_crystals___forgiven=`echo  ','                       |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`


circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`


circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`


circuits_crystals___forgiven=`echo  ', circuits, test,'       |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ','                       |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  $2                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`


circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`


circuits_crystals___forgiven=`echo  ', circuits, star,fall,'  |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ','                       |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  $3                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`



circuits_crystals___forgiven=`echo  ','                       |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`


circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`

circuits_crystals___forgiven=`echo  ''                        |  tee -a  './?.fst'`




circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`


circuits_crystals___forgiven=`echo  '#define that_circuits___'$1        | tee -a   './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  '#define that_circuits_test___'$2   | tee -a   './?.c' './?.cpp'`


circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.c' './?.cpp'`




circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`


circuits_crystals___forgiven=`echo  "that_circuits___"$1"='yes'"        | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`


circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`


circuits_crystals___forgiven=`echo  "that_circuits_test___"$2"='yes'"   | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`


circuits_crystals___forgiven=`echo  "that_circuits_starfall___"$3"='yes'"  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                     | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                     | tee -a   './?.sh'`




#fi


elif  [  $1  =  'island'  ]

then




circuits_crystals___forgiven=`echo  ', circuits,'             | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ','                       | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  $1                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`


circuits_crystals___forgiven=`echo  ','                       | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`


circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`


circuits_crystals___forgiven=`echo  ', circuits, mountains,'  | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ','                       | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  $2                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`


circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`


circuits_crystals___forgiven=`echo  ','                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ','                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  $3                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`



circuits_crystals___forgiven=`echo  ','                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`


circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`

circuits_crystals___forgiven=`echo  ''                        | tee -a   './?.fst'`




circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`


circuits_crystals___forgiven=`echo  '#define that_circuits___island'        | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`


circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`


circuits_crystals___forgiven=`echo  '#define that_circuits_mountains___'$2  | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`


circuits_crystals___forgiven=`echo  '#define that_circuits_starfall___'$3   | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`


circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a  './?.c' './?.cpp'`





circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`



circuits_crystals___forgiven=`echo  "that_circuits___"$1"='yes'"        | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`



circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`



circuits_crystals___forgiven=`echo  "that_circuits_mountains___"$2"='yes'"  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                      | tee -a   './?.sh'`



circuits_crystals___forgiven=`echo  "that_circuits_starfall___"$3"='yes'"  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                     | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                     | tee -a   './?.sh'`



circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`

circuits_crystals___forgiven=`echo  ''                                  | tee -a   './?.sh'`




fi

fi




#cat ./?.fst
#
#that_ways___fst_roots__dreams_convertions___begin ()
#
#that_ways___fst_roots__dreams_clean___convertions ()
#
#
#cat ./?.c
#
#cat ./?.cpp
#
#
#cat ./?.sh
#
#cat ./?.java
#
#
#cat ./?.vb
#
#cat ./?.py




circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/c-scripts.c'         |  tee -a   './?.c'`

circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/c-unix.c'            |  tee -a   './?.c'`

circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/c-windows.c'         |  tee -a   './?.c'`


circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/shell-unix.sh'       |  tee -a   './?.sh'`


circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/c-plus-scripts.cpp'  |  tee -a   './?.c'  './?.cpp'`

circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/c-plus-unix.cpp'     |  tee -a   './?.c'  './?.cpp'`

circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/c-plus-windows.cpp'  |  tee -a   './?.c'  './?.cpp'`

circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/c-plus-arduino.cpp'  |  tee -a   './?.c'  './?.cpp'`


circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/shell-unix.sh'    |  tee -a   './?.sh'`


circuits_crystals___forgiven=`cat './abouts/prepare/star-fall/visual-basic.vb'  |  tee -a   './?.vb'`


:<<EOF

#cat './fst/roots/mountains/prepare/java.java'               >>  './?.java'


cat './fst/roots/mountains/prepare/python3-scripts.py'      >>  './?.py'

cat './fst/roots/mountains/prepare/python3-raspberrypi.py'  >>  './?.py'


EOF






}




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_prepare___package  ]; then




if [  $that_circuits___island  ]; then


unset $that_circuits___island


fi




fi

fi




fi



if  [  !  $that_circuits_crystals___fst_roots__dreams_package___scripts  ]; then

that_circuits_crystals___fst_roots__dreams_package___scripts='yes'




if  [  $that_circuits___test  ]; then

if  [  $that_circuits_test___fst_roots__dreams_package___scripts  ]; then




if  [  ! $that_circuits___island  ]; then


$that_circuits___island='yes'


fi




fi

fi




if  [  $that_circuits___island  ]; then

if  [  $that_circuits_starfall___shell_unix  ]; then




function that_ways___fst_roots__dreams_package___scripts

{







:<<EOF

cat './fst/roots/mountains/prepare/star-fall/poems-third-common.poems-third             >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-third-origin.poems-third'            >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-third-unix.poems-third'              >>  './?.fst'

#cat './fst/roots/mountains/prepare/star-fall/poems-third-windows.poems-third'           >>  './?.fst'


cat './fst/roots/mountains/prepare/star-fall/poems-annotation-common.poems-annotation'  >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-annotation-origin.poems-annotation'  >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-annotation-windows.poems-annotation'  >>  './?.fst'

cat './fst/roots/mountains/prepare/star-fall/poems-annotation-arduino.arduino'          >>  './?.fst'


cat './fst/roots/mountains/prepare/star-fall/shell-unix.shell'                          >>  './?.fst'

cat './fst/roots/mountains/prepare/starfall/shell-bash.shell'                          >>  './?.fst'

cat './fst/roots/mountains/prepare/starfall/shell-ash.shell'                           >>  './?.fst'

EOF


cat './fst/roots/prepare/circuits/scripts'                                  >>  './?.fst'


:<<EOF


#cat './fst/roots/mountains/prepare/circuits/arduino-nano.arduino'                     >>  './island.c'

#cat './fst/roots/mountains/prepare/circuits/arduino-micro.arduino'                    >>  './island.c'

cat './fst/roots/mountains/prepare/circuits/renesas-gadget-citrus.arduino'            >>  './island.c'


cat './fst/roots/mountains/prepare/circuits/science-technology-consulting-8g1k08a.c'  >>  './island.c'

cat './fst/roots/mountains/prepare/circuits/science-technology-consulting-15f104w.c'  >>  './island.c'


cat './fst/roots/mountains/prepare/circuits/sgs-thomson-32l011k4t6-nucleo.c'          >>  './island.c'


cat './fst/roots/mountains/prepare/circuits/linux-intel'                              >>  './island.c'

cat './fst/roots/mountains/prepare/circuits/linux-raspberrypi'                        >>  './island.c'


cat './fst/roots/mountains/prepare/circuits/windows.poems-third'                      >>  './?.fst'

cat './fst/roots/mountains/prepare/circuits/windows.visual-basic'                     >>  './?.visual-basic'

cat './fst/roots/mountains/prepare/circuits/windows-cygwin.poems-third'               >>  './?.fst'


cat './fst/roots/mountains/prepare/circuits/android.java'                             >>  './?.java'

cat './fst/roots/mountains/prepare/circuits/android-termux.poems-third'               >>  './?.fst'




cat './fst/roots/mountains/soft-serial/prepare.arduno'              >>  './island.c'


cat './fst/roots/mountains/muti-serial/prepare.arduino'             >>  './island.c'

cat './fst/roots/mountains/muti-serial/winbond-w25q/erase.arduino'  >>  './island.c'

cat './fst/roots/mountains/muti-serial/winbond-w25q/read.arduino'   >>  './island.c'

cat './fst/roots/mountains/muti-serial/winbond-w25q/write.arduino'  >>  './island.c'




cat './fst/roots/threads/prepare'                                   >>  './island.c'

cat './fst/roots/threads/begin'                                     >>  './island.c'

cat './fst/roots/threads/end'                                       >>  './island.c'
EOF

circuits_crystals___forgiven=`cat  './fst/roots/lakes/prepare'             |  tee -a  './?.fst'`
:<<EOF
#include "./roots/lakes/prepare.bases"

#include "./roots/lakes/waves/create.bases" // may stuck when it fail

#include "./roots/lakes/waves/free.bases" // may run out when it fail

#include "./roots/lakes/waves/resize.bases" // may stuck when it fail


#include "./roots/lakes/forms/waters/prepare.bases"


#include "./roots/lakes/forms/silts/prepare.bases"


#include "./roots/lakes/forms/stones/prepare.bases"

EOF

circuits_crystals___forgiven=`cat  './fst/roots/lakes/forms/stones/convert.shell'                                       |  tee -a   './?.sh'`
:<<EOF

#include "./roots/lakes/waters/show.bases" // use __int8_t,  only decimal system,   maybe less than zero

#include "./roots/lakes/waters/clean.bases" // use __int8_t


#include "./roots/lakes/stones/copy.bases"

#include "./roots/lakes/stones/append.bases"

#include "./roots/lakes/stones/measure.bases"

#include "./roots/lakes/stones/compare.bases"

#include "./roots/lakes/stones/find.bases"


#include "./roots/trees/remove.computers"


#include "./roots/trees/dirents/is.linuxes" // note_structure

#include "./roots/trees/dirents/create.linuxes"


#include "./roots/trees/files/is.linuxes" // note_structure

#include "./roots/trees/files/write.computers" // note_files

EOF

circuits_crystals___forgiven=`cat  './fst/roots/trees/files/snakes.shell'  |  tee -a  './?.sh'`

:<<EOF

#include "./roots/trees/files/read.computers" // note_files; may read even wrong


#include "./roots/parks/terminals/out-silts.bases"

#include "./roots/parks/terminals/out-stones.bases"


EOF


circuits_crystals___forgiven=`cat './fst/roots/dreams/prepare/scripts.shell'     |  tee -a  './?.sh'`

circuits_crystals___forgiven=`cat './fst/roots/dreams/prepare/package.shell'     |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/package/scripts.shell'     |  tee -a  './?.sh'`

circuits_crystals___forgiven=`cat './fst/roots/dreams/package/annotetion.shell'  |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/convert/scripts.shell'     |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/check/scripts.shell'       |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/snakes/scripts.shell'      |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/test/scripts.shell'        |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat './fst/roots/dreams/circulars/scripts.shell'   |  tee -a  './?.sh'`


:<<EOF


#include "./branches/threads/prepare.bases"

#include "./branches/threads/begin.bases"

#include "./branches/threads/end.bases"


#include "./branches/lakes/prepare.bases"

#include "./branches/lakes/begin.bases"

#include "./branches/lakes/end.bases"


#include "./branches/lakes/waves/add.bases"  // support types include waters, silts and stones

#include "./branches/lakes/waves/drop.bases"

#include "./branches/lakes/waves/fish.bases"

#include "./branches/lakes/waves/graze.bases"


#include "./branches/lakes/forms/stones/copy.bases"

#include "./branches/lakes/forms/stones/append.bases"

#include "./branches/lakes/forms/stones/compare.bases"


#include "./branches/lakes/bubbles/prepare.bases"

#include "./branches/lakes/bubbles/clean.bases"


#include "./branches/lakes/bubbles/lights/prepare.bases"

#include "./branches/lakes/bubbles/lights/clean.bases"


#include "./branches/lakes/bubbles/threads/prepare.bases"

#include "./branches/lakes/bubbles/threads/clean.bases"


#include "./branches/lakes/bubbles/moons/prepare.bases"

#include "./branches/lakes/bubbles/moons/clean.bases"


#include "./branches/trees/dirents/is.linuxes"

#include "./branches/trees/dirents/create.linuxes"
//
#include "./branches/trees/dirents/remove.linuxes"


#include "./branches/trees/files/is.linuxes"

#include "./branches/trees/files/save.linuxes"

#include "./branches/trees/files/get.linuxes"

#include "./branches/trees/files/remove.linuxes"


#include "./branches/parks/tenderness/out.bases"


#include "./branches/selfcheck/lakes/show.bases"

#include "./branches/selfcheck/lakes/judge-lights.bases"


#include "./branches/dreams/prepare.bases"

#include "./branches/dreams/clean.bases"


#include "./branches/dreams/checks/prepare.bases"

#include "./branches/dreams/checks/clean.bases"

#include "./branches/dreams/checks/begin.bases"


#include "./branches/dreams/checks/forms/blank.bases"


/#include "./branches/dreams/deamons/begin.bases"


#include "./branches/dreams/tests/prepare.bases"

#include "./branches/dreams/tests/clean.bases"

#include "./branches/dreams/tests/begin.bases"


//#include "./branches/dreams/snows/prepare.bases"

//#include "./branches/dreams/snows/clean.bases"

//#include "./branches/dreams/snows/begin.bases"

//#include "./branches/dreams/snows/deamons.bases"


#include "./branches/dreams/showings/prepare.bases"

#include "./branches/dreams/showings/clean.bases"

#include "./branches/dreams/showings/begin.bases"


//#include "./branches/dreams/spiders/prepare.bases"

//#include "./branches/dreams/spiders/clean.bases"

//#include "./branches/dreams/spiders/begin.bases"

//#include "./branches/dreams/spiders/deamons.bases"


#include "./branches/dreams/fallings/begin.bases"




#include "./stars-ship.c"




#include "./branches/dreams/seeds/begin.bases"


EOF

#circuits_crystals___forgiven=`cat  './fst/branc hes/flowers/begin.poems-third`   |  tee -a  './?.poems-third' // no blank check yet

circuits_crystals___forgiven=`cat  './fst/branches/flowers/cain.shell'           |  tee -a  './?.sh'`

#circuits_crystals___forgiven=`cat  './fst/branches/flowers/scripts'              |  tee -a  './?.fst'`

#circuits_crystals___forgiven=`cat  './fst/branches/flowers/scripts.poems-third'  |  tee -a  './?.c' './?.cpp'`

circuits_crystals___forgiven=`cat  './fst/branches/flowers/scripts.shell'        |  tee -a  './?.sh'`


circuits_crystals___forgiven=`cat  './fst/roots/flowers/scripts'                 |  tee -a  './?.fst'`

circuits_crystals___forgiven=`cat  './fst/roots/flowers/scripts.poems-third'     |  tee -a  './?.c' './?.cpp'`

#circuits_crystals___forgiven=`cat  './fst/roots/flowers/scripts.arduino'         |  tee -a  './?.cpp'`

circuits_crystals___forgiven=`cat  './fst/roots/flowers/scripts.shell'           |  tee -a  './?.sh'`









}




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_package___scripts  ]; then




if [  $that_circuits___island  ]; then


unset $that_circuits___island


fi




fi

fi




fi



if [  ! $that_circuits_crystals___fst_roots__dreams_package___annotetion  ]; then

that_circuits_crystals___fst_roots__dreams_package___annotetion='yes'




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_package___annotetion  ]; then




if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




fi


fi




if [  $that_circuits___island  ]; then

if [  $that_circuits_starfall___shell_unix  ]; then




function that_ways___fst_roots__dreams_package___annotetion

{









that_circuits_crystals___forgiven=`echo  ''                                          |  tee -a  './?.sh'`

that_circuits_crystals___forgiven=`echo  ''                                          |  tee -a  './?.sh'`


that_circuits_crystals___forgiven=`echo  ''                                          |  tee -a  './?.sh'`

that_circuits_crystals___forgiven=`echo  ''                                          |  tee -a  './?.sh'`


that_circuits_crystals___forgiven=`echo  'that_ways___fst_roots__flowers___scripts'  |  tee -a  './?.sh'`

that_circuits_crystals___forgiven=`echo  ''                                          |  tee -a  './?.sh'`

that_circuits_crystals___forgiven=`echo  ''                                          |  tee -a  './?.sh'`


that_circuits_crystals___forgiven=`echo  ''                                          |  tee -a  './?.sh'`

that_circuits_crystals___forgiven=`echo  ''                                          |  tee -a  './?.sh'`









}




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_package___annotetion  ]; then




if [  $that_circuits___island  ]; then


unset $that_circuits___island


fi




fi

fi




fi



if [  !  $that_circuits_crystals___fst_roots__dreams_convert___scripts  ]; then

that_circuits_crystals___fst_roots__dreams_convert___scripts='yes'




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_convert___scripts  ]; then




if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_convert___scripts  ]; then




function that_ways___Fst_roots__dreams_convert___scripts

{


:<<EOF

cp  ./?.fst.temporary                ./?.fst.convert

EOF

:<<EOF

cp  ./?.fst.convert                  ./?.poems-third.convert

cp  ./?.fst.convert                  ./?.poems-annotetion.convert


cp  ./?.fst.convert                  ./?.shell.convert

cp  ./?.fst.convert                  ./?.java.convert


cp  ./?.fst.convert                  ./?.visual-basic.convert

cp  ./?.fst.convert                  ./?.python.convert

EOF

:<<EOF

cp  ./?.poems-third.temporary        ./?.poems-third.convert

cp  ./?.poems-annotetion.temporary   ./?.poems-annotetion.convert


cp  ./?.shell.temporary              ./?.shell.convert

cp  ./?.java.temporary               ./?.java.convert


cp  ./?.visual-basic.temporary       ./?.visual-basic.convert

cp  ./?.python.temporary             ./?.python.convert

EOF


:<<EOF

cp  ./?.poems-third.convert          ./?.c

cp  ./?.poems-annotetion.convert     ./?.cpp


cp  ./?.shell.convert                ./?.sh

cp  ./?.java.convert                 ./?.java


cp  ./?.visual-basic.convert         ./?.vb

cp  ./?.python.convert               ./?.py

EOF







}




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_convert___scripts  ]; then




if [  $that_circuits___island  ]; then


unset $that_circuits___island


fi




fi

fi




fi



if [  !  $that_circuits_crystals___fst_roots__dreams_check___scripts  ]; then

that_circuits_crystals___fst_roots__dreams_check___scripts='yes'




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_check___scripts  ]; then




if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




fi

fi




if [  $that_circuits___island  ]; then

if [  $that_circuits_starfall___fst_roots__dreams_check___scripts  ]; then




function that_ways___fst_roots__dreams_check___scripts

{


that_circuits_crystals___forgiven=''


}




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_check___scripts  ]; then




if [  $that_circuits___island  ]; then


unset $that_circuits___island


fi




fi

fi




fi



if [  !  $that_circuits_crystals___fst_roots__dreams_snakes___scripts  ]; then

that_circuits_crystals___fst_roots__dreams_snakes___scripts='yes'




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_snakes___scripts  ]; then




if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




fi

fi




if [  $that_circuits___island  ]; then

if [  $that_circuits_starfall___shell_unix  ]; then




function that_ways___fst_roots__dreams_snakes___scripts

{









cc   ./?.c  -o  ./?.temporary

:<<EOF

c++  ./?.cpp/

(-std=c++0x)/
(-lm)/
(-lpthead)/
(-lasound)/
(-lwiringpi)/

-o  ./?.temporary

EOF


cp ./?.sh ./?.shell.temporary









}




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_snakes___scripts  ]; then




if [  $that_circuits___island  ]; then


unset $that_circuits___island


fi




fi

fi




fi



if [  !  $that_circuits_crystals___fst_roots__dreams_test___scripts  ]; then

that_circuits_crystals___fst_roots__dreams_test___scripts='yes'




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dream_test___scripts  ]; then



if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




fi

fi




if [  $that_circuits___island  ]; then

if [  $that_circuits_crystals___shell_unix  ]; then




function that_ways___fst_roots__dreams_test___scripts

{







:<<EOF

     ./?.temporary

cp   ./?.temporary        ./?

EOF


:<<EOF

bash ./?.shell.temporary

cp   ./?.shell.temporary  ./?.shell

EOF







}




fi

fi




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_roots__dreams_test___scripts  ]; then




if [  $that_circuits___island  ]; then


unset $that_circuits___island


fi




fi

fi




fi




if [  !  $that_circuits_crystals___fst_branches__flowers___cain  ]; then

that_circuits_crystals___fst_branches__flowers___cain='yes'




if [  $that_circuits___test  ]; then


if [  $that_circuits_test___fst_branches__flowers___cain  ]; then









if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




if [  !  $that_circuits_starfall___shell_unix  ]; then


that_circuits_starfall___shell_unix='yes'


fi









fi


fi




if [  $that_circuits___island  ]; then


if [  $that_circuits_starfall___shell_unix  ]; then









function that_ways___fst_branches__flowers___cain ()

{

























echo ''

























}









fi


fi




if  [  $that_circuits___test  ]; then


if  [  $that_circuits_test___fst_branches__flowers___cain  ]; then









unset  $that_circuits___island


unset  $that_circuits_starfall___shell_unix









fi


fi




fi



if [  ! $that_circuits_crystals___fst_branches__flowers___scripts  ]; then

that_circuits_crystals___fst_branches__flowers___scripts='yes'




if [  $that_circuits___test  ]; then

if [  $that_circuits_test___fst_branches__flowers___scripts  ]; then




if [  !  $that_circuits___island  ]; then


that_circuits___island='yes'


fi




fi

fi




if [  $that_circuits___island  ]; then

if [  $that_circuits_starfall___shell_unix  ]; then




function that_ways___fst_branches__flowers___scripts ()

{

























that_ways___fst_roots__dreams_prepare___scripts  ''

that_ways___fst_roots__dreams_prepare___package  ''


that_ways___fst_roots__dreams_package___scripts  ''

that_ways___fst_roots__dreams_package___annotetion  ''


that_ways___fst_roots__dreams_convert___scripts  ''


that_ways___fst_roots__dreams_check___scripts  ''


that_ways___fst_roots__dreams_snakes___scripts  ''


that_ways___fst_roots__dreams_test___scripts  ''


that_ways___fst_roots__dreams_circulars___scripts  ''

























}









fi


fi




if [ $that_circuits___test ]; then

if [ $that_circuits_starfall___shell_unix ]; then




unset  $that_circuits___island

unset  $that_circuits_test___fst_branches__flowers___scripts




fi

fi




fi



if [  !  $that_circuits_crystals___fst_roots__flowers___scripts  ]; then

that_circuits_crystals___fst_roots__flowers___scripts='yes'




#if [  $that_circuits___island  ]; then

if [  $that_circuits_starfall___shell_unix  ]; then









function  that_ways___fst_roots__flowers___scripts

{









note_silts_switches='yes'


note_silts___tenderness=$#


note_stones___tenderness=$@
















if [  ! $note_silts___tenderness  ]; then


note_silts_switches='no'


fi









if  [  ! $note_stones___tenderness  ]; then


note_silts_switches='no'


fi
















echo '$note_silts___tenderness'  |   \
                                     \
grep  [^0-9]    >    /dev/null   &&  \
                                     \
                                     \
note_silts_switches='no'         ||  \
                                     \
note_silts_switches='yes'            \
                                     \
;                                    \

























if [  $note_silts_switches  ==  'no'  ]; then


that_circuits_crystals___forgiven=''


fi




if [  $note_silts_switches  ==  'yes'  ]; then


if [  $that_circuits___test  ]; then




that_ways___fst_branches__flowers___scripts  \
                                             \
                                             \
$note_silts___tenderness                     \
                                             \
$note_stones___tenderness                    \
                                             \
;                                            \


fi




if [  $that_circuits___island  ]; then


that_ways___fst_branches__flowers___cain  \
                                          \
                                          \
$note_silts___tenderness                  \
                                          \
$note_stones___tenderness                 \
                                          \
;                                         \




fi


fi

























unset  $that_silts___tenderness


unset  $that_stones___tenderness


unset  $that_silts_switches









}









fi




fi

#fi





that_ways___fst_roots__flowers___scripts




